{"version":3,"file":"static/js/134.7808920c.chunk.js","mappings":"sMA+DA,UA3DA,WACE,OAAsCA,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAyCP,EAAAA,EAAAA,WAAS,GAAlD,eAAOQ,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MA8BjB,OA5BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcP,EAAaQ,IAAI,SACrC,IAAKD,EAGH,OAFAN,EAAgB,CAAC,QACjBE,GAAgB,GAGlBL,GAAa,GACbK,GAAgB,IAChBM,EAAAA,EAAAA,IAAeF,GACZG,MAAK,SAAAC,GACJ,GAAIA,EAAKC,GACP,OAAOD,EAAKE,OAEZ,MAAM,IAAIC,MAAM,mDAEnB,IACAJ,MAAK,SAAAK,GAAI,OAAInB,EAAemB,EAAKC,QAAxB,IACTC,OAAM,SAAAC,GAAG,OAAIC,MAAMD,EAAV,IACTE,SAAQ,kBAAMtB,GAAa,EAAnB,GACZ,GAAE,CAACE,EAAcC,KAShB,4BACE,kBAAMoB,SARa,SAAAC,GACrBA,EAAIC,iBACJ,IAAMhB,EAAce,EAAIE,OAAOC,SAASC,OAAOC,MAC/C1B,EAAgB,CAAE2B,MAAOrB,GAC1B,EAIG,WACE,4BACE,kBAAOsB,KAAK,OAAOC,KAAK,cAE1B,mBAAQD,KAAK,SAAb,uBAEDhC,IAAa,wCACbK,IACC,+BACGP,QADH,IACGA,OADH,EACGA,EAAaoC,KAAI,SAAAC,GAAI,OACpB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMhC,GAA/C,SACG4B,EAAKK,SAFDL,EAAKE,GADM,QAW/B,C,uJC7DD,IAAMI,EAAW,gCACXC,EAAU,2CAIhB,SAASC,IACP,OAAOC,MAAM,GAAD,OAAIH,EAAJ,8BAAkCC,GAC/C,CAED,SAASG,EAAYC,GACjB,OAAOF,MAAM,GAAD,OAAIH,EAAJ,iBAAqBK,EAArB,YAA+BJ,GAC9C,CAED,SAAS9B,EAAe4B,GACpB,OAAOI,MAAM,GAAD,OAAIH,EAAJ,8BAAkCD,EAAlC,YAA2CE,GAC1D,CAED,SAASK,EAAeD,GACtB,OAAOF,MAAM,GAAD,OAAIH,EAAJ,iBAAqBK,EAArB,mCAAsDJ,GACnE,CAED,SAASM,EAAcF,GACrB,OAAOF,MAAM,GAAD,OACPH,EADO,iBACUK,EADV,mCAC2CJ,EAD3C,WAGb,C","sources":["pages/Movies.jsx","servises/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getFilmByTitle } from 'servises/api';\n\nfunction Movies() {\n  const [findedFilms, setFindedFilms] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isSearchQvery, setISearchQvery] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (!searchQuery) {\n      setSearchParams({});\n      setISearchQvery(false);\n      return;\n    }\n    setIsLoading(true);\n    setISearchQvery(true);\n    getFilmByTitle(searchQuery)\n      .then(resp => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          throw new Error('Something wrong. Please, whrite correct request.');\n        }\n      })\n      .then(data => setFindedFilms(data.results))\n      .catch(err => alert(err))\n      .finally(() => setIsLoading(false));\n  }, [searchParams, setSearchParams]);\n\n  const handleOnSubmit = evt => {\n    evt.preventDefault();\n    const searchQuery = evt.target.elements.search.value;\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleOnSubmit}>\n        <label>\n          <input type=\"text\" name=\"search\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <div>Loading...</div>}\n      {isSearchQvery && (\n        <ul>\n          {findedFilms?.map(film => (\n            <li key={film.id}>\n              <Link to={`/movies/${film.id}`} state={{ from: location }}>\n                {film.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=08b33049f839026db786bd595752148e';\n\n\n\nfunction getTrendingFilms() {\n  return fetch(`${BASE_URL}trending/movie/day?${API_KEY}`);\n}\n\nfunction getFilmById(filmId) {\n    return fetch(`${BASE_URL}movie/${filmId}?${API_KEY}`)\n}\n\nfunction getFilmByTitle(title) {\n    return fetch(`${BASE_URL}search/movie?query=${title}&${API_KEY}`)\n}\n\nfunction getFilmCredits(filmId) {\n  return fetch(`${BASE_URL}movie/${filmId}/credits?language=en-US&${API_KEY}`);\n}\n \nfunction getFilmReview(filmId) {\n  return fetch(\n    `${BASE_URL}movie/${filmId}/reviews?language=en-US&${API_KEY}&page=1`\n  );\n}\n\n\nexport {\n  getTrendingFilms,\n  getFilmById,\n  getFilmByTitle,\n  getFilmCredits,\n  getFilmReview,\n};"],"names":["useState","findedFilms","setFindedFilms","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","isSearchQvery","setISearchQvery","location","useLocation","useEffect","searchQuery","get","getFilmByTitle","then","resp","ok","json","Error","data","results","catch","err","alert","finally","onSubmit","evt","preventDefault","target","elements","search","value","query","type","name","map","film","to","id","state","from","title","BASE_URL","API_KEY","getTrendingFilms","fetch","getFilmById","filmId","getFilmCredits","getFilmReview"],"sourceRoot":""}